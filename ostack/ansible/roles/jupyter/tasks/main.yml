
---
- name: Download bioexcel github  
  become: yes
  git: >
      repo=https://github.com/bioexcel/biobb_workflows.git
      dest=/opt/bioexcel
      
- name: Create openssl directory
  become: yes
  file:
   path: /opt/openssl
   state: directory
   mode: '0755'

- name: Generate OpenSSL key and certificate
  become: yes
  shell: openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout {{jupyter_keyfile}} -out {{jupyter_certfile}} -subj "/C=GB/ST=Cambridge/L=Cambridge/O=Global Security/OU=IT Department/CN=ebi.ac.uk/EA=navis@ebi.ac.uk"

- name: openssl - permission for certfile
  become: yes
  become_user: {{lookup('env','ANSIBLE_REMOTE_USER')}}
  file:
   path: /opt/openssl/mycert.pem
   mode: '0644'
 
#- name: openssl - permission for keyfile
#  become: yes
#  file:
#   path: /opt/openssl/mykey.key
#   mode: '0600'
    
#- name: Install openstack client package
#  become: yes
#  pip:
#    name: 'python-openstackclient'
 #   state: present
  #  executable: '{{ jupyter_package_manager }}'  

- name: Insert/Update configuration openstack
  become: yes
  shell: |
    echo "export OS_USERNAME={{lookup('env','OS_USERNAME')}}" >> /home/ubuntu/.bashrc  
    echo "export OS_PASSWORD={{lookup('env','OS_PASSWORD')}}" >> /home/ubuntu/.bashrc 
    echo "export OS_PROJECT_NAME={{lookup('env','OS_PROJECT_NAME')}}" >> /home/ubuntu/.bashrc 
    echo "export OS_AUTH_URL={{lookup('env','OS_AUTH_URL')}}" >> /home/ubuntu/.bashrc 

  
- name: Source .bashrc
  become: yes
  command: bash -i /home/{{lookup('env','ANSIBLE_REMOTE_USER')}}/.bashrc  
  
- name: Add security group to server
  become: yes
  shell: ufw allow 8888
  #openstack server add security group "{{lookup('env','external_ip')}}" 'for-jupyter' 

- name: Install Python packages
  become: '{{ jupyter_package_manager_become }}'
  pip:
    name: 'jupyter'
    state: '{{ jupyter_package_state }}'
    executable: '{{ jupyter_package_manager }}'

- name: Generate Jupyter password
  when: jupyter_plaintext_password != ''
  block:
    - name: Acquire Jupyter password hash
      command: 'python -c "from notebook.auth import passwd; print(passwd(''{{ jupyter_plaintext_password }}''));"'
      register: jupyter_password_output
      no_log: yes
      changed_when: no

- name: Remember Jupyter password hash
  set_fact:
   jupyter_password: '{{ jupyter_password_output.stdout }}'
  changed_when: no

- name: Create Jupyter profile
  command: jupyter notebook --generate-config
  become_user: "{{lookup('env','ANSIBLE_REMOTE_USER')}}"
  args:
    creates: '{{ jupyter_config_filename }}'

- name: Apply Jupyter config
  template:
    src: jupyter_notebook_config.py.j2
    dest: '{{ jupyter_config_filename }}'
    mode: 0644
    force: yes

- name: Install Jupyter as a daemon
  when: jupyter_daemon_enable
  block:
    - name: Find Jupyter server binary
      command: which jupyter-notebook
      register: jupyter_server_which_output
      changed_when: no

- name: Initialize Jupyter server binary path
  set_fact:
     jupyter_daemon_executable: '{{ jupyter_server_which_output.stdout }}'
  changed_when: no

- name: Make sure systemd directory exists
  become: yes
  file:
     path: '{{ jupyter_daemon_systemd_dir }}'
     state: directory

- name: Create systemd script
  become: yes
  template:
     src: jupyter.service.j2
     dest: '{{ jupyter_daemon_systemd_filename }}'
     force: yes     

- name: Enable Jupyter daemon
  become: yes
  command: "{{item}}"
  with_items:
  - bash -i /home/ubuntu/.bashrc && conda activate biobb
  - systemctl enable jupyter.service
  - systemctl daemon-reload
  - systemctl restart jupyter.service
