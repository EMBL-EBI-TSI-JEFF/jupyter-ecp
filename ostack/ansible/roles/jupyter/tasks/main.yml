- name: add universe repository for bionic
  become: true
  apt_repository: 
    repo: deb http://archive.ubuntu.com/ubuntu bionic universe
    state: present
    
- name: Install dependencies for jupyter
  apt:
   name: ['python3-pip']
   state: present
   
- name: Download bioexcel github  
  become: true
  git: >
      repo=https://github.com/bioexcel/biobb_workflows.git
      dest=/opt/bioexcel
     
- name: opt - permission for ansible remote user
  become: true
  shell: sudo chown -R {{lookup('env','ANSIBLE_REMOTE_USER')}}:{{lookup('env','ANSIBLE_REMOTE_USER')}} /opt/
  
- name: Generate OpenSSL key and certificate
  become: true
  shell: openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /home/ubuntu/mykey.key -out /home/ubuntu/mycert.pem -subj "/C=GB/ST=Cambridge/L=Cambridge/O=Global Security/OU=IT Department/CN=ebi.ac.uk/EA=navis@ebi.ac.uk"

#- name: Install jupyter
#  become: true
#  shell: snap install jupyter
  
#- name: Install jupyter core
#  become: true
#  apt:
#   name: ['jupyter-core']
#   state: present 
  
#- name: Generate jupyter config
 # become: true
#  shell: /usr/bin/jupyter notebook --generate-config 

#- name: Enable nglview extension
#  become: true
#  shell: jupyter-nbextension enable nglview --py --sys-prefix
  
#- name: Install openstack client
#  become: true
#  apt:
#   name: ['python-openstackclient']
 #  state: present 
   
- name: Activate biobb
  become: true
  command: "{{ item }}"
  with_items:
   - bash -i /home/{{lookup('env','ANSIBLE_REMOTE_USER')}}/.bashrc && conda activate biobb 
   - bash -i /home/{{lookup('env','ANSIBLE_REMOTE_USER')}}/.bashrc && pip3 install jupyter
   - bash -i /home/{{lookup('env','ANSIBLE_REMOTE_USER')}}/.bashrc && pip3 install jupyter-core
   - bash -i /home/{{lookup('env','ANSIBLE_REMOTE_USER')}}/.bashrc && jupyter-nbextension enable nglview --py --sys-prefix
   - bash -i /home/{{lookup('env','ANSIBLE_REMOTE_USER')}}/.bashrc && pip3 install python-openstackclient
   - bash -i /home/{{lookup('env','ANSIBLE_REMOTE_USER')}}/.bashrc &&  ln -s  /opt/miniconda3/envs/biobb/bin/jupyter /usr/bin/jupyter
   #- bash -i /home/{{lookup('env','ANSIBLE_REMOTE_USER')}}/.bashrc && openstack server add security group {{lookup('env','external_ip')}} for-jupyter
   #- bash -i /home/{{lookup('env','ANSIBLE_REMOTE_USER')}}/.bashrc && /opt/miniconda3/envs/biobb/bin/jupyter notebook --generate-config
    
   # - bash -i /home/{{lookup('env','ANSIBLE_REMOTE_USER')}}/.bashrc && conda activate biobb:jupyter notebook --generate-config 
#- name: /home/ubuntu - permission for ansible remote user
#  become: true
 # shell: sudo chown -R {{lookup('env','ANSIBLE_REMOTE_USER')}}:{{lookup('env','ANSIBLE_REMOTE_USER')}} /home/ubuntu
  
- name: Generate jupyter config
  become: true
  script: "{{ lookup('file', 'jupyter_config.sh') }}"
  args:
    executable: /bin/bash
  #command: bash -i /home/{{lookup('env','ANSIBLE_REMOTE_USER')}}/.bashrc && conda activate biobb && jupyter notebook --generate-config --config-dir=/home/ubuntu/
  #with_items:
  # - bash -i /home/{{lookup('env','ANSIBLE_REMOTE_USER')}}/.bashrc && conda activate biobb 
  # - bash -i /home/{{lookup('env','ANSIBLE_REMOTE_USER')}}/.bashrc && jupyter notebook --generate-config 
  
  #args:
  #  executable: /bin/bash
   
  
  #command: "{{item}}"
  #with_items:
  # - bash -i /home/{{lookup('env','ANSIBLE_REMOTE_USER')}}/.bashrc && cd /opt/bioexcel
  # - bash -i /home/{{lookup('env','ANSIBLE_REMOTE_USER')}}/.bashrc && conda activate biobb  && jupyter notebook --generate-config  
  # - echo "c.NotebookApp.password='sha1:fd8fae12903a:8bf7be4731a9ee846b1439bd606cdb85fbc63d2a'">> /home/ubuntu/.jupyter/jupyter_notebook_config.py
  # - bash -i /home/{{lookup('env','ANSIBLE_REMOTE_USER')}}/.bashrc && jupyter notebook --certfile=/home/ubuntu/mycert.pem --keyfile /home/ubuntu/mykey.key
    
    
