---  
- name: Create openssl directory
  file:
   path: '{{ ansible_env.HOME }}/openssl'
   state: directory
   mode: '0755'

- name: Generate OpenSSL key and certificate
  shell: openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout {{jupyter_keyfile}} -out {{jupyter_certfile}} -subj "/C=GB/ST=Cambridge/L=Cambridge/O=Global Security/OU=IT Department/CN=ebi.ac.uk/EA=cloud-portal@ebi.ac.uk"

- name: openssl - permission for certfile
  become: yes
  file:
   path: "{{jupyter_certfile}}"
   mode: '0777'
 
- name: openssl - permission for keyfile
  become: yes
  file:
   path: "{{jupyter_keyfile}}"
   mode: '0777'
  
- name: Generate Jupyter password hash for password "{{ jupyter_plaintext_password }}"
  become_user: "{{ ansible_user }}"
  shell: bash -ilc 'python -c "from notebook.auth import passwd; print(passwd(\"{{ jupyter_plaintext_password }}\"));"'
  register: jupyter_password_output
  changed_when: no

- name: Remember Jupyter password hash
  set_fact:
   jupyter_password: '{{ jupyter_password_output.stdout }}'
  changed_when: no

- name: Create Jupyter profile
  become_user: "{{ ansible_user }}"
  shell: bash -ilc 'jupyter notebook --generate-config'

- name: Apply Jupyter config
  template:
    src: jupyter_notebook_config.py.j2
    dest: '{{ jupyter_config_filename }}'
    mode: 0644
    force: yes

- name: Install Jupyter as a daemon
  become_user: "{{ ansible_user }}"
  when: jupyter_daemon_enable
  block:
    - name: Find Jupyter server binary
      shell: bash -ilc 'which jupyter-notebook'
      register: jupyter_server_which_output
      changed_when: no

- name: Initialize Jupyter server binary path
  set_fact:
     jupyter_daemon_executable: '{{ jupyter_server_which_output.stdout }}'
  changed_when: no

- name: Make sure systemd directory exists
  become: yes
  become_user: root
  file:
     path: '{{ jupyter_daemon_systemd_dir }}'
     state: directory

- name: Create systemd script
  become: yes
  become_user: root
  template:
     src: jupyter.service.j2
     dest: '{{ jupyter_daemon_systemd_filename }}'
     force: yes 
  
- name: Enable Jupyter daemon
  become: yes
  become_user: "{{ ansible_user }}"
  shell: bash -ilc 'sudo systemctl enable jupyter.service;sudo systemctl daemon-reload;sudo systemctl start jupyter.service'  
